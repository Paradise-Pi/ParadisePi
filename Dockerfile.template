FROM balenalib/%%BALENA_MACHINE_NAME%%-debian-node:17-buster-build AS builder

# https://github.com/nodejs/docker-node/blob/main/docs/BestPractices.md#global-npm-dependencies
ENV NPM_CONFIG_PREFIX=/home/node/.npm-global

# Install some packages that are required
RUN install_packages sqlite3 bzip2 node-gyp node-pre-gyp node-nan

# Defines our working directory in container
WORKDIR /usr/src/app

# Copies the package.json first for better cache on later pushes
COPY package*.json ./

# This install npm dependencies on the balena build server,
# making sure to clean up the artifacts it creates in order to reduce the image size.
RUN JOBS=MAX npm install --production=false --unsafe-perm && npm cache verify && rm -rf /tmp/*

# This will copy all files in our root to the working directory in the container
COPY . ./

RUN npm run package

#FROM balenalib/%%BALENA_MACHINE_NAME%%-debian:buster-run

# Install some packages that are required
RUN install_packages sqlite3 bzip2 x11-xserver-utils

# Defines our working directory in container
#WORKDIR /usr/src/app

#COPY --from=builder /usr/src/app/out/ ./
#COPY ./balena-entrypoint ./balena-entrypoint.sh
RUN chmod +x balena-entrypoint.sh


ENV DEV_MODE=false

ENTRYPOINT  ["./balena-entrypoint.sh"]
ENV DISPLAY=:0